name: CI

on: push

jobs:
  checks:
    name: Lint and test
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: [3.7, 3.8]
    services:
      postgres:
        image: postgres:11.5-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install poetry==1.0.*
          poetry config virtualenvs.create false
          poetry install
      - name: Lint with wps, mypy and style linters
        run: ./scripts/lint
      - name: run tests with pytest
        env:
          SECRET_KEY: secret_key
          DB_CONNECTION: postgres://postgres:postgres@localhost/postgres
        run: |
          alembic upgrade head
          USE_LOCAL_DB_FOR_TEST=False ./scripts/test --cov-report=xml --cov-fail-under=100
      - name: Upload coverage to Codecov
        run: bash <(curl -s https://codecov.io/bash) -t $TOKEN -B $REF
        env:
          TOKEN: ${{ secrets.CODECOV_TOKEN }}
          REF: ${{ github.ref }}
  postman:
    name: Postman tests
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: [3.7, 3.8]
    services:
      postgres:
        image: postgres:11.5-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install poetry==1.0.*
          poetry config virtualenvs.create false
          poetry install --no-dev
      - name: Run newman and test service
        env:
          SECRET_KEY: secret_key
          DB_CONNECTION: postgres://postgres:postgres@localhost/postgres
        run: |
          alembic upgrade head && uvicorn app.main:app &
          APIURL=http://localhost:8000/api ./postman/run-api-tests.sh
